import { Request, Response, NextFunction } from "express"; import jwt from "jsonwebtoken"; import User, { IUser } from "../models/User"; declare global { namespace Express { interface Request { user?: IUser; } } } export const authenticate = async (req: Request, res: Response, next: NextFunction): Promise<void> => { try { const token = req.header("Authorization")?.replace("Bearer ", ""); if (!token) { res.status(401).json({ message: "Authentication required" }); return; } const decoded = jwt.verify(token, process.env.JWT_SECRET || "your_jwt_secret_key_here") as { id: string }; const user = await User.findById(decoded.id); if (!user) { res.status(401).json({ message: "User not found" }); return; } req.user = user; next(); } catch (error) { res.status(401).json({ message: "Invalid token" }); } };
